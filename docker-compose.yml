version: '3' # version of docker-compose

services:
  rosject: # name of the container
    image: ros_galactic:latest
    container_name: turtlebot3_container
    network_mode: host
    privileged: true
    user: root
    volumes:
      # ---------------------------------------------------------------------
      # Remember that to allow docker to public GUI tools on your computer
      # you have to run "xhost +local:root". To disallow, "xhost -local:root"
      #
      # The volume below allows the container to have access to the
      # "physical display". If the DISPLAY variable is :0, then the graphical
      # things will be written at /tmp/.X11-unix/X0
      # ---------------------------------------------------------------------
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ~/karelics_ws/src/ros2_ws:/ros2_ws:rw
    environment: # set ENV vars
      - DISPLAY # Forward the DISPLAY variable of the host to the container
      - QT_X11_NO_MITSHM=1 # Taken from https://answers.ros.org/question/391195/using-rviz-in-docker/?answer=391504#post-id-391504
      - TURTLEBOT3_MODEL=burger

    # entrypoint: ["/bin/bash", "-c"]
    command:
      - bash
      - -c
      - | 
          mkdir -p src/ && \
          apt-get update --fix-missing && \
          rosdep install -i --from-path src --rosdistro galactic -y && \
          colcon build --symlink-install
          source /opt/ros/galactic/setup.bash
          source /catkin_ws/install/setup.bash
          source /ros2_ws/install/setup.bash
          source /usr/share/gazebo/setup.sh
          terminator -u --title="Docker Container"

          # sleep infinity
          # terminator
          # roslaunch rover_autonav cali_ecst_lab.launch --screen


# NOTE 1: Docker Compose takes care of creating a common NETWORK
